#!/bin/bash

# Author: Sheikh Wasiu Al Hasib
# This script to automate server configuration on failover
# Date: 03-Mar-2022

#*************************************************************************************************************
# Seince primary change when failover that is why we declare all possible node information node1, node2, node3.
#**************************************************************************************************************

# Step1 : Check each ip
# Step2 : if that ip is primary  then execute this command


server_list=(192.168.43.21 192.168.43.22 192.168.43.23)  

pg_config_file_dir_path=/etc/barman.d			 # This is the barman server configuration folder path
server_name=pg						 # This is the server name in that configuration file.

for server_ip in ${server_list[@]}
do
     #get_primary_info=`(psql -h $server_ip -d repmgr  -U repmgr -Axqtc "select type from nodes where type='primary'" | cut -d "|" -f 2)`;
     get_primary_info=`(psql -h $server_ip -d repmgr  -U repmgr -Axqtc "select type from nodes where SPLIT_PART(SPLIT_PART(conninfo,' ', 1),'=',2)='$server_ip'" | cut -d "|" -f 2)`;
    if [[ $get_primary_info -ne  0 ]]
    then
	   continue;
    fi 

     #************************************
     #Check valid primary node information 
     #************************************
     if [[ $get_primary_info = 'primary' ]] 
     then
          get_primary_ip=`(psql -h $server_ip -d repmgr  -U repmgr -Axqtc "select SPLIT_PART(SPLIT_PART(conninfo,' ', 1),'=',2) from nodes where type='primary';" | cut -d "|" -f 2)`
          get_config_ip=(`awk 'NR==11{print $4}' /etc/barman.d/pg.conf | cut -d ' ' -f 3 | cut -d '@' -f 2`)

          #****************************************************************
	  #Check equality between primary node IP and barman configured IP
	  #****************************************************************
         if [[ $get_config_ip = $get_primary_ip  ]] 
         then
	     echo Matched both, primary IP: $get_primary_ip and  configured IP: $get_config_ip
	     exit 0
         else
	     echo Not matched new primary: $get_primary_ip  and barman configured ip: $get_config_ip


	     #***********************************************************
	     #If above command success then change with latest Primary IP
	     #***********************************************************
	             sudo sed -i "s/$get_config_ip/$get_primary_ip/" ${pg_config_file_dir_path}/pg.conf
		     #barman receive-wal --create-slot $server_name
		     # if privious barman slot not deleted then need to terminate privious slot using select 
		     # pg_terminate_backend(pid); command and next delete using pg_drop_replication_slot('barman_slot');
                     barman cron

	     #*************************************
	     #Stop Barman Slot and Drop Barman Slot
	     #*************************************
	     barman receive-wal --stop $server_name
             barman receive-wal --drop-slot $server_name

           
	     #*************************************
	     # Check barman status of barman slot
	     # If true terminate barman slot and next drop barman slot
	     # If false then only drop barman slot
	     #*************************************

             barman_slot_status=$(psql -h $server_ip -U repmgr -d repmgr -Axqtc "SELECT * FROM pg_replication_slots where slot_name='barman_slot'" | cut -d "|" -f 7 );
	     if [[ $barman_slot_status = 't' ]]
	     then
                barman_slot_pid=$(psql -h $server_ip -U repmgr -d repmgr -Axqtc "SELECT * FROM pg_replication_slots where slot_name='barman_slot'" | cut -d "|" -f 8 );
		psql -h $server_ip -U repmgr -d repmgr -Axqtc "SELECT PG_TERMINATE_BACKEND('$barman_slot_pid')"
		if [[ $? -eq 0 ]]
		then
			psql -h $server_ip -U repmgr -d repmgr -Axqtc "SELECT pg_drop_replication_slot('barman_slot')"
		fi
	    elif [[ $barman_slot_status = 'f' ]] 
	    then 
                psql -h $server_ip -U repmgr -d repmgr -Axqtc "SELECT pg_drop_replication_slot('barman_slot')"
	    else
		echo barman_slot not found for delete
	    fi

        fi
      exit 0
      fi
done

